[
  {
    "ContainingType": "Project.Controllers.BlocksController",
    "Method": "GetBlocks",
    "RelativePath": "api/Blocks",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Project.dto.BlockDto, Project, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.BlocksController",
    "Method": "GetBlocksByCampusId",
    "RelativePath": "api/Blocks/ByCampus",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "campusId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.BlocksController",
    "Method": "GetBlock",
    "RelativePath": "api/Blocks/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.Block",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CampusController",
    "Method": "GetCampus",
    "RelativePath": "api/Campus",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Project.Dto.CampusDto, Project, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CampusController",
    "Method": "GetCampusById",
    "RelativePath": "api/Campus/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.Campus",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.ChartController",
    "Method": "GetCampusReportComparison",
    "RelativePath": "api/Chart/comparison",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "year",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ChartController",
    "Method": "GetCampusDetailReportById",
    "RelativePath": "api/Chart/detail-report",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "campusId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ChartController",
    "Method": "GetCleaningReportsByMonth",
    "RelativePath": "api/Chart/GetCleaningReportsByMonth",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "month",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "year",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ChartController",
    "Method": "GetCleaningReportsByQuarter",
    "RelativePath": "api/Chart/GetCleaningReportsByQuarter",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ChartController",
    "Method": "GetShiftEvaluations",
    "RelativePath": "api/Chart/GetShiftEvaluations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "campusId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ChartController",
    "Method": "GetTopCriteriaValuesByCampus",
    "RelativePath": "api/Chart/GetTopCriteriaValuesByCampus",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "campusId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ChartController",
    "Method": "GetResponsibleTagReportByCampus",
    "RelativePath": "api/Chart/responsible-tag-report",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "campusId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ChartController",
    "Method": "GetRoomGroupReportByCampus",
    "RelativePath": "api/Chart/room-group-report",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "campusId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ChartController",
    "Method": "GetCleaningReportSummary",
    "RelativePath": "api/Chart/summary",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "campusId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CleaningFormsController",
    "Method": "GetCleaningForms",
    "RelativePath": "api/CleaningForms",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CleaningFormsController",
    "Method": "PutCleaningForm",
    "RelativePath": "api/CleaningForms",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "cleaningForm",
        "Type": "Project.Entities.CleaningForm",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CleaningFormsController",
    "Method": "PostCleaningForm",
    "RelativePath": "api/CleaningForms",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cleaningForm",
        "Type": "Project.Entities.CleaningForm",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.CleaningForm",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CleaningFormsController",
    "Method": "GetFormByRoomId",
    "RelativePath": "api/CleaningForms/ByRoomId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "RoomId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CleaningFormsController",
    "Method": "CreateCleaningForms",
    "RelativePath": "api/CleaningForms/create-form",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Project.Dto.CreateCleaningFormRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CleaningFormsController",
    "Method": "GetCriteriaByFormId",
    "RelativePath": "api/CleaningForms/criteria",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "formId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CleaningFormsController",
    "Method": "GetFormDetails",
    "RelativePath": "api/CleaningForms/GetFullInfo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "formId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CleaningFormsController",
    "Method": "GetCleaningForm",
    "RelativePath": "api/CleaningForms/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.CleaningForm",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CleaningReportsController",
    "Method": "GetCleaningReports",
    "RelativePath": "api/CleaningReports",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Project.Entities.CleaningReport, Project, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CleaningReportsController",
    "Method": "CreateCleaningReport",
    "RelativePath": "api/CleaningReports/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Project.Dto.CleaningReportRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.CleaningReport",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CleaningReportsController",
    "Method": "GetAllCleaningReport",
    "RelativePath": "api/CleaningReports/GetAllInfo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CleaningReportsController",
    "Method": "GetCleaningReportByCleaningForm",
    "RelativePath": "api/CleaningReports/GetByCleaningForm",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "formId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CleaningReportsController",
    "Method": "GetCleaningReport",
    "RelativePath": "api/CleaningReports/GetById",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Dto.CleaningReportDetailsDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CleaningReportsController",
    "Method": "GetReportDetails",
    "RelativePath": "api/CleaningReports/GetFullInfo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reportId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CleaningReportsController",
    "Method": "GetReportInfoByReportId",
    "RelativePath": "api/CleaningReports/GetReportInfo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reportId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CleaningReportsController",
    "Method": "UpdateCriteriaAndCleaningReport",
    "RelativePath": "api/CleaningReports/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Project.Dto.UpdateCleaningReportRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CleaningReportsController",
    "Method": "Evaluate",
    "RelativePath": "api/CleaningReports/user-score",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Project.Dto.EvaluationRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CriteriaController",
    "Method": "GetCriteria",
    "RelativePath": "api/Criteria",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Project.Entities.Criteria, Project, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CriteriaController",
    "Method": "DisableCriteria",
    "RelativePath": "api/Criteria",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CriteriaController",
    "Method": "DeleteCriteria",
    "RelativePath": "api/Criteria",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CriteriaController",
    "Method": "GetCriteriasByRoomCategoricalId",
    "RelativePath": "api/Criteria/ByRoom",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "RoomCategoricalId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CriteriaController",
    "Method": "GetCriteriasByRoomId",
    "RelativePath": "api/Criteria/ByRoomId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "RoomId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CriteriaController",
    "Method": "CreateCriteria",
    "RelativePath": "api/Criteria/CreateCriteria",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "criteriaDto",
        "Type": "Project.Dto.CreateCriteriaDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CriteriaController",
    "Method": "GetAllCriteria",
    "RelativePath": "api/Criteria/GetAll",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.Criteria",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CriteriaController",
    "Method": "GetCriteria",
    "RelativePath": "api/Criteria/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.Criteria",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CriteriaController",
    "Method": "SearchCriteria",
    "RelativePath": "api/Criteria/search",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "keyword",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CriteriaReportsController",
    "Method": "GetCriteriaReports",
    "RelativePath": "api/CriteriaReports",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Project.Entities.CriteriaReport, Project, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CriteriaReportsController",
    "Method": "PutCriteriaReport",
    "RelativePath": "api/CriteriaReports",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "criteriaReport",
        "Type": "Project.Entities.CriteriaReport",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CriteriaReportsController",
    "Method": "PostCriteriaReport",
    "RelativePath": "api/CriteriaReports",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "criteriaReport",
        "Type": "Project.Entities.CriteriaReport",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.CriteriaReport",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CriteriaReportsController",
    "Method": "GetReportByCriteriaId",
    "RelativePath": "api/CriteriaReports/Criteria",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "criteriaId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CriteriaReportsController",
    "Method": "GetCriteriaReport",
    "RelativePath": "api/CriteriaReports/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.CriteriaReport",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CriteriasPerFormsController",
    "Method": "GetCriteriasPerForms",
    "RelativePath": "api/CriteriasPerForms",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Project.Entities.CriteriasPerForm, Project, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CriteriasPerFormsController",
    "Method": "PutCriteriasPerForm",
    "RelativePath": "api/CriteriasPerForms",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "criteriasPerForm",
        "Type": "Project.Entities.CriteriasPerForm",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CriteriasPerFormsController",
    "Method": "PostCriteriasPerForm",
    "RelativePath": "api/CriteriasPerForms",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "criteriasPerForm",
        "Type": "Project.Entities.CriteriasPerForm",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.CriteriasPerForm",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CriteriasPerFormsController",
    "Method": "DeleteCriteriasPerForm",
    "RelativePath": "api/CriteriasPerForms",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CriteriasPerFormsController",
    "Method": "GetCriteriaByFormId",
    "RelativePath": "api/CriteriasPerForms/ByFormId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "formId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CriteriasPerFormsController",
    "Method": "EditForm",
    "RelativePath": "api/CriteriasPerForms/edit",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "formData",
        "Type": "Project.Dto.EditFormDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.CriteriasPerFormsController",
    "Method": "GetCriteriasPerForm",
    "RelativePath": "api/CriteriasPerForms/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.CriteriasPerForm",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.CriteriasPerFormsController",
    "Method": "AddTagsForCriteria",
    "RelativePath": "api/CriteriasPerForms/newForm",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newForm",
        "Type": "Project.Dto.CriteriaPerFormDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.FilesController",
    "Method": "DeleteFile",
    "RelativePath": "api/Files/DeleteFile",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filename",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.FilesController",
    "Method": "DownloadFile",
    "RelativePath": "api/Files/DownloadFile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "filename",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.FilesController",
    "Method": "UploadFile",
    "RelativePath": "api/Files/UploadFile",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "file",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.FilesController",
    "Method": "UploadFiles",
    "RelativePath": "api/Files/UploadFiles",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "files",
        "Type": "System.Collections.Generic.List\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=6.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.FloorsController",
    "Method": "GetFloor",
    "RelativePath": "api/Floors",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.Floor",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.FloorsController",
    "Method": "GetFloorByBlockId",
    "RelativePath": "api/Floors/Block",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "BlockId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.GroupRoomsController",
    "Method": "GetGroupRooms",
    "RelativePath": "api/GroupRooms",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Dto.GroupWithRoomsResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.GroupRoomsController",
    "Method": "UpdateRoomGroup",
    "RelativePath": "api/GroupRooms",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "dto",
        "Type": "Project.Dto.RoomGroupUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.GroupRoomsController",
    "Method": "CreateGroupWithRooms",
    "RelativePath": "api/GroupRooms",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Project.Dto.GroupWithRoomsDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.GroupRoomsController",
    "Method": "DeleteGroupRoom",
    "RelativePath": "api/GroupRooms",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.GroupRoomsController",
    "Method": "GetRoomGroupById",
    "RelativePath": "api/GroupRooms/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Dto.RoomGroupViewDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.ResponsibleGroupsController",
    "Method": "GetResponsibleGroups",
    "RelativePath": "api/ResponsibleGroups",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ResponsibleGroupsController",
    "Method": "UpdateResponsibleGroup",
    "RelativePath": "api/ResponsibleGroups",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "dto",
        "Type": "Project.Dto.ResponsibleGroupUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ResponsibleGroupsController",
    "Method": "CreateResponsiableGroupWithUser",
    "RelativePath": "api/ResponsibleGroups",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "Project.Dto.ResponsiableGroupDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ResponsibleGroupsController",
    "Method": "DeleteResponsibleGroup",
    "RelativePath": "api/ResponsibleGroups",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ResponsibleGroupsController",
    "Method": "GetAll",
    "RelativePath": "api/ResponsibleGroups/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ResponsibleGroupsController",
    "Method": "GetResponsibleGroup",
    "RelativePath": "api/ResponsibleGroups/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Dto.ResponsiableGroupDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.RoomCategoriesController",
    "Method": "GetRoomCategories",
    "RelativePath": "api/RoomCategories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Project.Entities.RoomCategory, Project, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.RoomCategoriesController",
    "Method": "PutRoomCategory",
    "RelativePath": "api/RoomCategories",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "roomCategory",
        "Type": "Project.Entities.RoomCategory",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.RoomCategoriesController",
    "Method": "PostRoomCategory",
    "RelativePath": "api/RoomCategories",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roomCategory",
        "Type": "Project.Entities.RoomCategory",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.RoomCategory",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.RoomCategoriesController",
    "Method": "DeleteRoomCategory",
    "RelativePath": "api/RoomCategories",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.RoomCategoriesController",
    "Method": "GetRoomCategoriesbyCriteriaId",
    "RelativePath": "api/RoomCategories/criteria",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "criteriaId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.RoomCategory",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.RoomCategoriesController",
    "Method": "GetRoomCategory",
    "RelativePath": "api/RoomCategories/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.RoomCategory",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.RoomsController",
    "Method": "GetRoom",
    "RelativePath": "api/Rooms",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.Room",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.RoomsController",
    "Method": "GetAllRooms",
    "RelativePath": "api/Rooms/All",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.RoomsController",
    "Method": "GetRoomsByFloorIdAndBlockId",
    "RelativePath": "api/Rooms/By-Floor\u0026Block",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "floorId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "blockId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.RoomsController",
    "Method": "GetRoomsByBlockAndCampus",
    "RelativePath": "api/Rooms/GetRoomByBlocksAndCampus",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "blockId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "campusId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.RoomsController",
    "Method": "GetRoomsByCampusAsync",
    "RelativePath": "api/Rooms/GetRoomByCampus",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "campusId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.RoomsController",
    "Method": "GetRoomsByFloorIdAndBlockIdIfFormExists",
    "RelativePath": "api/Rooms/IfExistForm-Floor\u0026Block",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "floorId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "blockId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.RoomsController",
    "Method": "SearchRoom",
    "RelativePath": "api/Rooms/SearchRoom",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roomName",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.SchedulesController",
    "Method": "GetSchedules",
    "RelativePath": "api/Schedules",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Project.Dto.ScheduleDetailInfoDto, Project, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.SchedulesController",
    "Method": "UpdateSchedule",
    "RelativePath": "api/Schedules",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "scheduleUpdateDto",
        "Type": "Project.Dto.ScheduleUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.SchedulesController",
    "Method": "CreateSchedule",
    "RelativePath": "api/Schedules",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "scheduleCreateDto",
        "Type": "Project.Dto.ScheduleCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.SchedulesController",
    "Method": "DeleteSchedule",
    "RelativePath": "api/Schedules",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "scheduleId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.SchedulesController",
    "Method": "GetUsersByShiftRoomAndCriteria",
    "RelativePath": "api/Schedules/get-users-by-shift-room-and-criteria",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "CampusId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "BlockId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "FloorId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "RoomId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ShiftId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "criteriaIds",
        "Type": "System.Collections.Generic.List\u00601[[System.String, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.SchedulesController",
    "Method": "GetRoomsListByRoomType",
    "RelativePath": "api/Schedules/GetRoomsList",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "RoomType",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.SchedulesController",
    "Method": "GetSchedule",
    "RelativePath": "api/Schedules/GetSchedule",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.Schedule",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.ShiftsController",
    "Method": "GetShifts",
    "RelativePath": "api/Shifts",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "shiftName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "categoryName",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ShiftsController",
    "Method": "PutShift",
    "RelativePath": "api/Shifts",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "shiftDto",
        "Type": "Project.Dto.ShiftUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ShiftsController",
    "Method": "PostShift",
    "RelativePath": "api/Shifts",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "shiftDto",
        "Type": "Project.Dto.ShiftCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.Shift",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.ShiftsController",
    "Method": "DeleteShift",
    "RelativePath": "api/Shifts",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ShiftsController",
    "Method": "GetShiftsByRoomId",
    "RelativePath": "api/Shifts/ByRoomId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roomId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.ShiftsController",
    "Method": "GetShiftById",
    "RelativePath": "api/Shifts/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.Shift",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.TagsController",
    "Method": "GetTags",
    "RelativePath": "api/Tags",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Project.Entities.Tag, Project, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.TagsController",
    "Method": "PostTag",
    "RelativePath": "api/Tags",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tag",
        "Type": "Project.Entities.Tag",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.Tag",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.TagsController",
    "Method": "GetTagAverageRatings",
    "RelativePath": "api/Tags/average-ratings",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.TagsController",
    "Method": "DeleteTag",
    "RelativePath": "api/Tags/DeleteTag",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.TagsController",
    "Method": "GetGroupInfoByTagId",
    "RelativePath": "api/Tags/GetGroupInfoByTagId",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tagId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.TagsController",
    "Method": "GetTag",
    "RelativePath": "api/Tags/GetTag",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.Tag",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.TagsController",
    "Method": "GetTagGroupsWithUserCount",
    "RelativePath": "api/Tags/GetTagGroups",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.TagsController",
    "Method": "GetCriteriaTagByTag",
    "RelativePath": "api/Tags/tagspercriteria",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tagId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.TagsController",
    "Method": "PutTag",
    "RelativePath": "api/Tags/UpdateTag",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "tag",
        "Type": "Project.Entities.Tag",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.TagsPerCriteriasController",
    "Method": "GetTagsPerCriteria",
    "RelativePath": "api/TagsPerCriterias",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Project.Entities.TagsPerCriteria, Project, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.TagsPerCriteriasController",
    "Method": "PutTagsPerCriteria",
    "RelativePath": "api/TagsPerCriterias",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "tagsPerCriteria",
        "Type": "Project.Entities.TagsPerCriteria",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.TagsPerCriteriasController",
    "Method": "PostTagsPerCriteria",
    "RelativePath": "api/TagsPerCriterias",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tagsPerCriteria",
        "Type": "Project.Entities.TagsPerCriteria",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.TagsPerCriteria",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.TagsPerCriteriasController",
    "Method": "DeleteTagsPerCriteria",
    "RelativePath": "api/TagsPerCriterias",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.TagsPerCriteriasController",
    "Method": "GetTagsByCriteriaId",
    "RelativePath": "api/TagsPerCriterias/criteria",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "criteriaId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.TagsPerCriteriasController",
    "Method": "GetTagsPerCriteria",
    "RelativePath": "api/TagsPerCriterias/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.TagsPerCriteria",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.TagsPerCriteriasController",
    "Method": "AddTagsForCriteria",
    "RelativePath": "api/TagsPerCriterias/newCriteria",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newCriteria",
        "Type": "Project.Dto.CriteriaDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.UsersController",
    "Method": "GetUsers",
    "RelativePath": "api/Users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Project.Dto.UserDto, Project, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.UsersController",
    "Method": "PutUser",
    "RelativePath": "api/Users",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "user",
        "Type": "Project.Entities.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.UsersController",
    "Method": "PostUser",
    "RelativePath": "api/Users",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "user",
        "Type": "Project.Entities.User",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.UsersController",
    "Method": "DeleteUser",
    "RelativePath": "api/Users",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.UsersController",
    "Method": "GetUser",
    "RelativePath": "api/Users/id",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "Project.Entities.User",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "Project.Controllers.UsersPerTagController",
    "Method": "CreateUsersPerTag",
    "RelativePath": "api/UsersPerTag",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "Project.Dto.AssignUserRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.QRController",
    "Method": "getInfoByQR",
    "RelativePath": "GetInfo",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roomCode",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Project.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[Project.WeatherForecast, Project, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]